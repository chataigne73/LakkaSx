From 0382127e9f39f83e313ea279bc407d4eb6bd5e73 Mon Sep 17 00:00:00 2001
From: =?utf-8?q?Ga=C3=ABl=20PORTAY?= <gael.portay@savoirfairelinux.com>
Date: Tue, 11 Apr 2017 17:28:48 -0400
Subject: [PATCH] Fix CRC build issue on 32bits armv8 target
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit

__ARM_FEATURE_CRC32 macro is set for armv8 cpus.

In case of a 32bits armv8 target, gcc complains about an unknown
attribute +crc.

	tools/qhash.cpp:148:54: error: attribute(target("+crc")) is unknown
	 static uint crc32(const Char *ptr, size_t len, uint h)

This attribute looks to not be available in 32bits mode. If the
attribute is bypassed (commented), the build breaks at linkage saying
crc32x instructions are bad.

To solve this build issue, this patch checks for both __aarch64__ and
__ARM_FEATURE_CRC32.

Signed-off-by: GaÃ«l PORTAY <gael.portay@savoirfairelinux.com>
---
 config.tests/arch/arch.cpp  | 2 +-
 src/corelib/tools/qhash.cpp | 2 +-
 src/corelib/tools/qsimd.cpp | 2 +-
 src/corelib/tools/qsimd_p.h | 4 ++--
 4 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/qtbase/config.tests/arch/arch.cpp b/qtbase/config.tests/arch/arch.cpp
index f99c5ca118..72f4af39fe 100644
--- a/qtbase/config.tests/arch/arch.cpp
+++ b/qtbase/config.tests/arch/arch.cpp
@@ -249,7 +249,7 @@ const char msg2[] = "==Qt=magic=Qt== Sub-architecture:"
 #ifdef __IWMMXT__
 " iwmmxt"
 #endif
-#ifdef __ARM_FEATURE_CRC32
+#if defined(__aarch64__) && defined(__ARM_FEATURE_CRC32)
 " crc32"
 #endif
 
diff --git a/qtbase/src/corelib/tools/qhash.cpp b/qtbase/src/corelib/tools/qhash.cpp
index abec9ebb79..84cbe51731 100644
--- a/qtbase/src/corelib/tools/qhash.cpp
+++ b/qtbase/src/corelib/tools/qhash.cpp
@@ -137,7 +137,7 @@ static uint crc32(const Char *ptr, size_t len, uint h)
         h = _mm_crc32_u8(h, *p);
     return h;
 }
-#elif defined(__ARM_FEATURE_CRC32)
+#elif defined(__aarch64__) && defined(__ARM_FEATURE_CRC32)
 static inline bool hasFastCrc32()
 {
     return qCpuHasFeature(CRC32);
diff --git a/src/coqtbase/relib/tools/qsimd.cpp b/qtbase/src/corelib/tools/qsimd.cpp
index d4edf459de..f07cb2914a 100644
--- a/qtbase/src/corelib/tools/qsimd.cpp
+++ b/qtbase/src/corelib/tools/qsimd.cpp
@@ -136,7 +136,7 @@ static inline quint64 detectProcessorFeatures()
 #if defined(__ARM_NEON__)
     features |= Q_UINT64_C(1) << CpuFeatureNEON;
 #endif
-#if defined(__ARM_FEATURE_CRC32)
+#if defined(__aarch64__) && defined(__ARM_FEATURE_CRC32)
     features |= Q_UINT64_C(1) << CpuFeatureCRC32;
 #endif
 
diff --git a/src/corelib/tools/qsimd_p.h b/src/corelib/tools/qsimd_p.h
index d5d887598e..92c93ea2e7 100644
--- a/qtbase/src/corelib/tools/qsimd_p.h
+++ b/qtbase/src/corelib/tools/qsimd_p.h
@@ -325,7 +325,7 @@
 #endif
 #endif
 // AArch64/ARM64
-#if defined(Q_PROCESSOR_ARM_V8) && defined(__ARM_FEATURE_CRC32)
+#if defined(__aarch64__) && defined(__ARM_FEATURE_CRC32)
 #if defined(Q_PROCESSOR_ARM_64)
 // only available on aarch64
 #define QT_FUNCTION_TARGET_STRING_CRC32      "+crc"
@@ -470,7 +470,7 @@
 #if defined __ARM_NEON__
         | (Q_UINT64_C(1) << CpuFeatureNEON)
 #endif
-#if defined __ARM_FEATURE_CRC32
+#if defined __aarch64__ && defined __ARM_FEATURE_CRC32
         | (Q_UINT64_C(1) << CpuFeatureCRC32)
 #endif
 #if defined __mips_dsp


